prototype(Flowpack.SearchPlugin:SingleResult) < prototype(TYPO3.TypoScript:Case) {
	default {
		condition = Flowpack.SearchPlugin:CanRender {
			type = ${result.nodeType.name + 'SearchResult'}
		}
		type = ${result.nodeType.name + 'SearchResult'}
	}

	fallback {
		condition = TRUE
		type = 'TYPO3.Neos:DocumentSearchResult'
	}
}

prototype(TYPO3.Neos:DocumentSearchResult) < prototype(TYPO3.TypoScript:Template) {
	templatePath = 'resource://Flowpack.SearchPlugin/Private/Templates/SearchResult/DocumentSearchResult.html'
	node = ${result}
	title = ${q(result).property('title')}
	parents =  ${Array.reverse(q(result).parents('[instanceof TYPO3.Neos:Document]').get())}
}

prototype(TYPO3.Neos.NodeTypes:PageSearchResult) < prototype(TYPO3.Neos:DocumentSearchResult)